name: Publish to GitHub Packages

on:
  release:
    types: [published]
  push:
    tags:
      - 'v*'

env:
  NODE_VERSION: '18'
  PNPM_VERSION: '9.0.0'

jobs:
  publish:
    name: Publish Package
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://npm.pkg.github.com'
          scope: '@thepia'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint with Biome
        run: pnpm run check

      - name: Type check
        run: pnpm run typecheck

      - name: Run tests
        run: pnpm run test

      - name: Build library
        run: pnpm run build

      - name: Verify build artifacts
        run: |
          ls -la dist/
          test -f dist/index.js
          test -f dist/index.cjs
          test -f dist/index.d.ts

      - name: Configure pnpm authentication
        run: |
          pnpm config set //npm.pkg.github.com/:_authToken "${NODE_AUTH_TOKEN}"
          pnpm config set @thepia:registry https://npm.pkg.github.com
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
          
      - name: Create release tarball
        run: npm pack
        
      - name: Create GitHub Release with tarball
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          files: |
            *.tgz
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to GitHub Packages
        run: pnpm publish --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}

      - name: Create GitHub Release Notes
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        uses: actions/github-script@v7
        with:
          script: |
            const tag = context.ref.replace('refs/tags/', '');
            const version = tag.replace('v', '');
            
            await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: tag,
              name: `Release ${version}`,
              body: `## Changes in ${version}\n\nSee [CHANGELOG.md](./CHANGELOG.md) for details.`,
              draft: false,
              prerelease: version.includes('-')
            });
